{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as FormsActions from './forms.actions';\nexport const initialState = {\n  forms: [],\n  selectedFormId: null,\n  loading: false,\n  error: null\n};\nexport const formsReducer = createReducer(initialState, on(FormsActions.loadForms, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(FormsActions.loadFormsSuccess, (state, {\n  forms\n}) => ({\n  ...state,\n  forms,\n  loading: false\n})), on(FormsActions.loadFormsFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: false,\n  error\n})), on(FormsActions.saveFormSuccess, (state, {\n  form\n}) => ({\n  ...state,\n  forms: state.forms.map(f => f.id === form.id ? form : f)\n})), on(FormsActions.createFormSuccess, (state, {\n  form\n}) => ({\n  ...state,\n  forms: [...state.forms, form]\n})), on(FormsActions.deleteFormSuccess, (state, {\n  id\n}) => ({\n  ...state,\n  forms: state.forms.filter(f => f.id !== id),\n  selectedFormId: state.selectedFormId === id ? null : state.selectedFormId\n})), on(FormsActions.selectForm, (state, {\n  id\n}) => ({\n  ...state,\n  selectedFormId: id\n})), on(FormsActions.resetDataSuccess, state => ({\n  ...state,\n  selectedFormId: null\n})));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}