{"ast":null,"code":"import _asyncToGenerator from \"D:/form-builder-angular19-updated/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { IndexedDBService } from '../core/services/indexeddb.service';\nimport { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/indexeddb.service\";\nimport * as i2 from \"@angular/cdk/scrolling\";\nfunction SubmissionsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"pre\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"json\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const s_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(s_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" - \", s_r1.formId, \" - \", s_r1.createdAt, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, s_r1.data));\n  }\n}\nexport let SubmissionsComponent = /*#__PURE__*/(() => {\n  class SubmissionsComponent {\n    constructor(db) {\n      this.db = db;\n      this.submissions = [];\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.submissions = yield _this.db.submissions.toArray();\n      })();\n    }\n    generateMock() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        for (let i = 0; i < 1000; i++) {\n          yield _this2.db.saveSubmission({\n            id: 'mock-' + Date.now() + '-' + i,\n            formId: 'form-1',\n            formVersion: '1.0.0',\n            data: {\n              v: i\n            },\n            createdAt: new Date().toISOString()\n          });\n        }\n        _this2.submissions = yield _this2.db.submissions.toArray();\n      })();\n    }\n    exportCsv() {\n      const headers = ['id', 'formId', 'formVersion', 'createdAt', 'data'];\n      const rows = this.submissions.map(s => [s.id, s.formId, s.formVersion, s.createdAt, JSON.stringify(s.data)]);\n      const csv = [headers.join(','), ...rows.map(r => r.map(c => `\"${String(c).replace(/\"/g, '\"\"')}\"`).join(','))].join('\\n');\n      const blob = new Blob([csv], {\n        type: 'text/csv'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'submissions.csv';\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n    static {\n      this.ɵfac = function SubmissionsComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || SubmissionsComponent)(i0.ɵɵdirectiveInject(i1.IndexedDBService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: SubmissionsComponent,\n        selectors: [[\"app-submissions\"]],\n        decls: 9,\n        vars: 1,\n        consts: [[3, \"click\"], [\"itemSize\", \"50\", 2, \"height\", \"400px\", \"border\", \"1px solid #ddd\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [2, \"padding\", \"8px\", \"border-bottom\", \"1px solid #eee\"]],\n        template: function SubmissionsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n            i0.ɵɵtext(2, \"Submissions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"button\", 0);\n            i0.ɵɵlistener(\"click\", function SubmissionsComponent_Template_button_click_3_listener() {\n              return ctx.generateMock();\n            });\n            i0.ɵɵtext(4, \"Generate 1000 mock\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 0);\n            i0.ɵɵlistener(\"click\", function SubmissionsComponent_Template_button_click_5_listener() {\n              return ctx.exportCsv();\n            });\n            i0.ɵɵtext(6, \"Export CSV\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"cdk-virtual-scroll-viewport\", 1);\n            i0.ɵɵtemplate(8, SubmissionsComponent_div_8_Template, 8, 6, \"div\", 2);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"cdkVirtualForOf\", ctx.submissions);\n          }\n        },\n        dependencies: [ScrollingModule, i2.CdkFixedSizeVirtualScroll, i2.CdkVirtualForOf, i2.CdkVirtualScrollViewport],\n        encapsulation: 2\n      });\n    }\n  }\n  return SubmissionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}