{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor() {\n      this.storageKey = 'theme-preference';\n    }\n    toggleDarkMode() {\n      throw new Error('Method not implemented.');\n    }\n    toggle() {\n      throw new Error('Method not implemented.');\n    }\n    init() {\n      const pref = localStorage.getItem(this.storageKey) || 'system';\n      this.apply(pref);\n    }\n    get() {\n      return localStorage.getItem(this.storageKey) || 'system';\n    }\n    set(pref) {\n      localStorage.setItem(this.storageKey, pref);\n      this.apply(pref);\n    }\n    apply(pref) {\n      const root = document.documentElement;\n      let theme = 'light';\n      if (pref === 'system') {\n        const mql = window.matchMedia('(prefers-color-scheme: dark)');\n        theme = mql.matches ? 'dark' : 'light';\n        // respond to future system changes\n        mql.onchange = e => {\n          if (this.get() === 'system') {\n            root.setAttribute('data-theme', e.matches ? 'dark' : 'light');\n          }\n        };\n      } else {\n        theme = pref;\n      }\n      root.setAttribute('data-theme', theme);\n    }\n    static {\n      this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ThemeService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ThemeService,\n        factory: ThemeService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ThemeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}