{"ast":null,"code":"import _asyncToGenerator from \"D:/form-builder-angular19-updated/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nexport let IndexedDbService = /*#__PURE__*/(() => {\n  class IndexedDbService extends Dexie {\n    constructor() {\n      super('FormBuilderDB');\n      this.version(1).stores({\n        forms: 'id, name, version, updatedAt',\n        submissions: 'id, formId, formVersion, createdAt',\n        audit: 'id, formId, action, at'\n      });\n    }\n    seedInitialForms(seedData) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const count = yield _this.forms.count();\n        if (count === 0) {\n          // convert dates to strings\n          const data = seedData.map(f => ({\n            ...f,\n            createdAt: f.createdAt || new Date().toISOString(),\n            updatedAt: f.updatedAt || new Date().toISOString()\n          }));\n          yield _this.forms.bulkAdd(data);\n        }\n      })();\n    }\n    getForms() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return _this2.forms.toArray();\n      })();\n    }\n    saveForm(form) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        form.updatedAt = new Date().toISOString();\n        yield _this3.forms.put(form);\n        yield _this3.audit.add({\n          id: 'a_' + Date.now(),\n          formId: form.id,\n          action: 'save',\n          payload: form,\n          at: new Date().toISOString()\n        });\n        return form;\n      })();\n    }\n    addSubmission(sub) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        yield _this4.submissions.add(sub);\n        yield _this4.audit.add({\n          id: 'a_' + Date.now(),\n          formId: sub.formId,\n          action: 'submit',\n          payload: sub,\n          at: new Date().toISOString()\n        });\n        return sub;\n      })();\n    }\n    clearAndSeed(seedData) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        yield _this5.forms.clear();\n        yield _this5.submissions.clear();\n        yield _this5.audit.clear();\n        yield _this5.seedInitialForms(seedData);\n      })();\n    }\n    static {\n      this.ɵfac = function IndexedDbService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || IndexedDbService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: IndexedDbService,\n        factory: IndexedDbService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return IndexedDbService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}