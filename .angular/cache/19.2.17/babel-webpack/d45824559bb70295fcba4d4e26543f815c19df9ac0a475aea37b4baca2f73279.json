{"ast":null,"code":"import _asyncToGenerator from \"D:/form-builder-angular19-updated/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Dexie from 'dexie';\nimport * as i0 from \"@angular/core\";\nclass FormDatabase extends Dexie {\n  constructor() {\n    super('FormBuilderDB');\n    this.version(1).stores({\n      forms: '++id, name, version, createdAt',\n      submissions: '++id, formId, formVersion, createdAt',\n      audit: '++id, formId, action, at'\n    });\n  }\n}\nexport let IndexedDbService = /*#__PURE__*/(() => {\n  class IndexedDbService {\n    constructor() {\n      this.db = new FormDatabase();\n    }\n    // Forms operations\n    getAllForms() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return _this.db.forms.toArray();\n      })();\n    }\n    getForm(id) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        return _this2.db.forms.get(id);\n      })();\n    }\n    saveForm(form) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        return _this3.db.forms.put(form);\n      })();\n    }\n    deleteForm(id) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        yield _this4.db.forms.delete(id);\n      })();\n    }\n    // Submissions operations\n    getSubmissionsByForm(formId) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        return _this5.db.submissions.where('formId').equals(formId).toArray();\n      })();\n    }\n    saveSubmission(submission) {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        return _this6.db.submissions.put(submission);\n      })();\n    }\n    // Audit operations\n    addAuditLog(log) {\n      var _this7 = this;\n      return _asyncToGenerator(function* () {\n        return _this7.db.audit.put({\n          ...log,\n          id: undefined\n        });\n      })();\n    }\n    getAuditLogs(formId) {\n      var _this8 = this;\n      return _asyncToGenerator(function* () {\n        return _this8.db.audit.where('formId').equals(formId).toArray();\n      })();\n    }\n    static {\n      this.ɵfac = function IndexedDbService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || IndexedDbService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: IndexedDbService,\n        factory: IndexedDbService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return IndexedDbService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}