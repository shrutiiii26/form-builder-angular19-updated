{"ast":null,"code":"import _asyncToGenerator from \"D:/form-builder-angular19-updated/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IndexedDBService } from '../core/services/indexeddb.service';\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { FormsModule } from '@angular/forms';\nlet SubmissionsComponent = class SubmissionsComponent {\n  constructor(route, db) {\n    this.route = route;\n    this.db = db;\n    this.submissions = [];\n    this.filteredSubmissions = [];\n    this.formId = null;\n    this.searchTerm = '';\n    this.dateFilter = '';\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.formId = _this.route.snapshot.paramMap.get('id');\n      yield _this.loadSubmissions();\n    })();\n  }\n  loadSubmissions() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.formId) {\n        _this2.submissions = yield _this2.db.getSubmissions(_this2.formId);\n      } else {\n        _this2.submissions = yield _this2.db.getAllSubmissions();\n      }\n      _this2.applyFilters();\n    })();\n  }\n  applyFilters() {\n    this.filteredSubmissions = this.submissions.filter(sub => {\n      const matchesSearch = !this.searchTerm || JSON.stringify(sub.data).toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesDate = !this.dateFilter || new Date(sub.createdAt).toDateString() === new Date(this.dateFilter).toDateString();\n      return matchesSearch && matchesDate;\n    });\n  }\n  onSearchChange() {\n    this.applyFilters();\n  }\n  onDateChange() {\n    this.applyFilters();\n  }\n  exportToCSV() {\n    if (this.filteredSubmissions.length === 0) return;\n    const headers = ['ID', 'Form ID', 'Created At', 'Data'];\n    const csvContent = [headers.join(','), ...this.filteredSubmissions.map(sub => [sub.id, sub.formId, sub.createdAt, `\"${JSON.stringify(sub.data).replace(/\"/g, '\"\"')}\"`].join(','))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `submissions-${this.formId || 'all'}-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  trackBySubmission(index, submission) {\n    return submission.id;\n  }\n};\nSubmissionsComponent = __decorate([Component({\n  selector: 'app-submissions',\n  templateUrl: './submissions.component.html',\n  styleUrls: ['./submissions.component.scss'],\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, ScrollingModule, FormsModule]\n}), __metadata(\"design:paramtypes\", [ActivatedRoute, IndexedDBService])], SubmissionsComponent);\nexport { SubmissionsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}