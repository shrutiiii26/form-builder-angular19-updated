{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as FormActions from '../forms/forms.actions';\nexport const initialState = {\n  forms: [],\n  activeForm: null,\n  submissions: [],\n  loading: false,\n  error: null\n};\nexport const formReducer = createReducer(initialState, on(FormActions.loadForms, state => ({\n  ...state,\n  loading: true\n})), on(FormActions.loadFormsSuccess, (state, {\n  forms\n}) => ({\n  ...state,\n  forms,\n  loading: false\n})), on(FormActions.setActiveForm, (state, {\n  formId\n}) => ({\n  ...state,\n  activeForm: state.forms.find(f => f.id === formId) || null\n})), on(FormActions.saveFormSuccess, (state, {\n  form\n}) => ({\n  ...state,\n  forms: state.forms.some(f => f.id === form.id) ? state.forms.map(f => f.id === form.id ? form : f) : [...state.forms, form],\n  activeForm: form\n})), on(FormActions.loadFormSubmissions, (state, {\n  formId\n}) => ({\n  ...state,\n  submissions: [] // Will be loaded via effect\n})));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}